.row
  = simple_form_for(@asset,
  :as => :asset,
  :url => @asset.new_record? ? inventory_index_path : inventory_path,
  :method => @asset.new_record? ? 'post' : 'put',
  :html => {:class => 'form-vertical'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|

    = f.input :asset_type_id, :as => :hidden
    = f.input :organization_id, :as => :hidden

    .col-md-3
      = dialog_tag('Vehicle Type', {:icon => 'fa fa-refresh', :class => "form_part"}) do
        = f.association :asset_subtype, :collection => AssetSubtype.active.where(asset_type_id: @asset.asset_type_id), :include_blank => false
        = f.input :asset_tag, :prompt => "Enter the asset tag...", :label => "Asset Tag", :input_html => {:data => {:convert => "uppercase"}}
        = f.input :external_id, :prompt => "Enter any external ID...", :label => "External ID", :input_html => {:maxlength => 32}
        = f.association :manufacturer, :prompt => "Select manufacturer...", :collection => Manufacturer.active_for_asset_type(@asset.asset_type), :label_method => :to_s
        = f.input :other_manufacturer, :disabled => f.object.manufacturer_id != Manufacturer.find_by(name: 'Other').try(:id)
        = f.input :manufacturer_model, :prompt => "Enter manufacturer model...", :label => "Manufacturer Model"
        = f.input :manufacture_year, :label => "Manufacture Year"
        = f.input :serial_number, :label => "VIN"
        = f.input :license_plate, :label => "License Plate"
        = f.input :title_number, :label => "Title Number"
        = f.association :title_owner, :collection => Organization.where(id: @organization_list), :label_method => 'coded_name', :label => "Title Owner"

        - view_component = 'app_vehicle_form'
        - if lookup_context.template_exists?(view_component, 'assets', true)
          = render :partial => "assets/#{view_component}", :locals => {:f => f}
    .col-md-3
      = dialog_tag('Characteristics', {:icon => 'fa fa-refresh', :class => "form_part"}) do
        = f.association :fuel_type, :collection => FuelType.active, :label_method => :to_s, :prompt => "Select type of fuel...", :label => "Fuel Type"
        = f.association :dual_fuel_type, :collection => DualFuelType.active, :label_method => :to_s, :label => "Dual Fuel Type", :disabled => f.object.fuel_type_id != FuelType.find_by(name: 'Dual Fuel').try(:id)
        = f.input :vehicle_length, :label => "Vehicle Length (ft)"
        = f.input :gross_vehicle_weight, :label => "Gross Vehicle Weight (lbs)"
        = f.input :seating_capacity, :label => "Seating Capacity"
        = f.input :standing_capacity, :label => "Standing Capacity"
        = f.input :wheelchair_capacity, :label => "Wheelchair Capacity"
        = f.association :vehicle_features, :as => :check_boxes, :label => "Vehicle Features"
        = f.input :rebuild_year, :label => "Rebuild Year"
        = f.association :vehicle_rebuild_type, :prompt => "Select vehicle rebuild type...", :label => "Vehicle Rebuild Type"
    .col-md-3
      = dialog_tag('Purchase', {:icon => 'fa fa-refresh', :class => "form_part"}) do
        = f.input :purchase_cost, :wrapper=> :vertical_prepend, :label => "Purchase Cost" do
          %span.input-group-addon
            %i.fa.fa-usd
          = f.input_field :purchase_cost, :class => "form-control"

        = f.input :purchase_date, :wrapper => :vertical_append, :label => "Purchase Date" do
          = f.input_field :purchase_date, :as => :string, :class => 'form-control datepicker', :data => {'behavior' => 'datepicker'}, :value => format_as_date(f.object.purchase_date)
          %span.input-group-addon
            %i.fa.fa-calendar

        = f.input :warranty_date, :wrapper => :vertical_append, :label => "Warranty Date" do
          = f.input_field :warranty_date, :as => :string, :class => 'form-control datepicker', :data => {'behavior' => 'datepicker'}, :value => format_as_date(f.object.warranty_date)
          %span.input-group-addon
            %i.fa.fa-calendar

        = f.input :in_service_date, :wrapper => :vertical_append, :label => "In Service Date" do
          = f.input_field :in_service_date, :as => :string, :class => 'form-control datepicker', :data => {'behavior' => 'datepicker'}, :value => format_as_date(f.object.in_service_date)
          %span.input-group-addon
            %i.fa.fa-calendar
        = f.input :purchased_new, :as => :radio_buttons, :required => true, :label => "Purchased New"
        = f.input :vendor_id, :as => :hidden
        = f.input :vendor_name, :label => 'Vendor', :input_html => {:autocomplete => 'off', :class => 'form-control', :placeholder => 'Enter vendor name', :id => 'asset_vendor_name', :data => {:url => filter_vendors_path}}
        = f.input :expected_useful_life, :as => :hidden, :value => 0
        = f.input :expected_useful_miles, :as => :hidden, :value => 0
    .col-md-3
      = dialog_tag('FTA Reporting', {:icon => 'fa fa-refresh', :class => "form_part"}) do
        = f.input :ada_accessible_lift, :label => "ADA Accessible"
        = f.association :fta_funding_type, :collection => FtaFundingType.active, :label_method => :to_s, :prompt => "Select funding type...", :label => "FTA Funding Type"
        = f.input :fta_emergency_contingency_fleet, :label => "FTA Emergency Contingency Fleet"
        = f.association :fta_vehicle_type, :collection => FtaVehicleType.active, :label_method => :to_s, :label => "FTA Vehicle Type"
        = f.input :primary_fta_mode_type_id, :as => :select, :collection => FtaModeType.active, :label_method => :to_s, :label => "Primary Mode"
        = f.input :primary_fta_service_type_id, :as => :select, :collection => FtaServiceType.active, :label_method => :to_s, :label => "FTA Service Type"
        = f.association :fta_mode_types, :collection => FtaModeType.active, :input_html => {:multiple => false}, :label_method => :to_s, :label => "Supports Another Mode"
        = f.association :fta_service_types, :collection => FtaServiceType.active, :input_html => {:multiple => false}, :label_method => :to_s, :label => "Supports Another FTA Service Type"
        - if @asset.fta_bus?
          = f.association :fta_bus_mode_type, :label => "FTA Bus Mode Type"
        = f.association :fta_ownership_type, :collection => FtaOwnershipType.active, :label_method => :to_s, :prompt => "Select ownership type...", :label => "FTA Ownership Type"
        = f.association :location, :collection => SupportFacility.where('organization_id = ?', @asset.organization_id)

        -# render the engine form components if there are any
        - SystemConfig.transam_module_names.each do |mod|
          - view_component = "#{mod}_asset_form"
          - Rails.logger.debug "Checking for #{view_component}: Results = #{lookup_context.template_exists?(view_component, 'assets', true)}"
          - if lookup_context.template_exists?(view_component, 'assets', true)
            = render :partial => "assets/#{view_component}", :locals => {:f => f}

    .col-md-12
      = f.button :submit, :class => 'btn btn-primary'

:javascript

  // Document Ready
  $(document).ready(function(){

    // Force uppercase text for OFT inputs
    $('[data-convert="uppercase"]').keyup(function(evt) {
      this.value = this.value.toUpperCase();
    });

    $('[data-behavior~=datepicker]').datepicker({
    });

    $('#asset_vendor_name').on('focus', function() {
      _typeahead_source_url = $(this).data('url');
    });

    // Enable typeahead for the SMO filter
    $('#asset_vendor_name').typeahead({
      items: 10,
      minLength: 2,
      source: _typeahead_searcher,
      matcher: _typeahead_matcher,
      highlighter: _typeahead_highlighter,
      updater: function (obj) {
        var item = JSON.parse(obj);
        // Update the UI
        $('#asset_vendor_name').attr('value', item.name);
        $('#asset_vendor_id').attr('value', item.id);
        return item.name;
      }
    });

    $( "#asset_serial_number" ).rules( "add", {
      exactlength: 17
    });
  });

