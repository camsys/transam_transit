%ul.nav.nav-tabs
  %li.active
    %a{:href => '#required', :data =>{:toggle => 'tab'}}
      Required Fields
  %li
    %a{:href => '#recommended', :data =>{:toggle => 'tab'}}
      Recommended Fields

= simple_form_for(@asset,
  :as => :asset,
  :url => inventory_index_path,
  :method => 'post',
  :html => {:class => 'form-vertical'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|

  .tab-content.form-section
    .tab-pane.fade.in.active#required
      .col-sm-6
        
        %h2.form-section-header
          Organization

        = f.association :organization, collection: TransitOperator.where(id: @asset.organization_id)


        %h2.form-section-header
          Service Status

        = f.simple_fields_for :service_status_updates, @asset.service_status_updates.build do |update_event|
          = update_event.input :service_status_type_id, collection: ServiceStatusType.active, label: 'Service Status'
        
        %h2.form-section-header
          Identification & Classification

        = f.input :asset_tag, label: 'Asset ID'

        = f.input :ntd_id, label: 'NTD ID', required: true

        = f.input :fta_asset_category_id, as: :hidden, input_html: {value: @asset.fta_asset_class.fta_asset_category_id}
        = f.association :fta_asset_class, label: 'Class'

        = f.input :global_fta_type, :collection => FtaFacilityType.all.map{|f| [ f.to_s, f.to_global_id ]}, label: 'Type', required: true

        = f.association :asset_subtype, collection: AssetSubtype.where(asset_type: AssetType.where(class_name: ['TransitFacility', 'SupportFacility'])), label: 'Subtype'
        
        = f.association :esl_category, collection: EslCategory.active, label: 'Estimated Service Life (ESL) Category'

        = f.input :facility_name

        = f.input :country
        = f.input :address1
        = f.input :address2
        = f.input :city
        = f.input :state, :as => :select, :collection => ISO3166::Country['US'].states.keys
        = f.input :zip

        .form-group.required.radio-buttons-inline
          %label.required.control-label
            %abbr{title: 'required'} *
            = "Facility Categorization"
          %span.radio
            %label
              = radio_button_tag :facility_category, 'primary_facility', checked: true
              Primary Facility
        

      .col-sm-6
        
        %h2.form-section-header
          Characteristics

        = f.input :facility_size
        
        = f.input :facility_size_unit, label: 'Size Units'

        .form-group.required.radio-buttons-inline
          %label.required.control-label
            %abbr{title: 'required'} *
            = " Section of a Larger Facility"
          %span.radio
            %label
              = radio_button_tag :section_of_larger_facility, 'yes', @asset.section_of_larger_facility
              Yes
          %span.radio
            %label
              = radio_button_tag :section_of_larger_facility, 'no', !@asset.section_of_larger_facility
              No

        = f.input :manufacture_year, label: 'Year Built'


        %h2.form-section-header
          Funding

        = f.input :purchase_cost, :wrapper => :vertical_append, :label => "Cost (Purchase)" do
          %span.input-group-addon
            %i.fa.fa-usd
          = f.input_field :purchase_cost, :class => "form-control", required: true, :value => 0, :label => false

        .form-group.required.radio-buttons-inline
          %label.required.control-label
            %abbr{title: 'required'} *
            = " Direct Capital Responsibility"
          %span.radio
            %label
              = radio_button_tag :direct_capital_responsibility, 'yes', @asset.direct_capital_responsibility
              Yes
          %span.radio
            %label
              = radio_button_tag :direct_capital_responsibility, 'no', !@asset.direct_capital_responsibility
              No

        = f.input :pcnt_capital_responsibility, :required => @asset.direct_capital_responsibility, :wrapper => :vertical_append, :label => "Percent Capital Responsibility" do
          = f.input_field :pcnt_capital_responsibility, :class => 'form-control', :required => @asset.direct_capital_responsibility, :disabled => !@asset.direct_capital_responsibility, :min => 1
          %span.input-group-addon %

        %h2.form-section-header
          Operations

        = f.input :in_service_date, :wrapper => :vertical_append, :label => "In Service Date" do
          = f.input_field :in_service_date, :as => :string, :class => 'form-control datepicker', :value => format_as_date(f.object.in_service_date)
          %span.input-group-addon
            %i.fa.fa-calendar

        = f.input :primary_fta_mode_type_id, collection: FtaModeType.active, label: 'Primary Mode', required: true

        %h2.form-section-header
          Procurement & Purchase

        = f.input :purchased_new, as: :radio_buttons, required: true, :wrapper_class => 'form-group radio-buttons-inline'

    .tab-pane.fade.in#recommended
      .col-sm-6

        %h2.form-section-header
          Condition

        = f.simple_fields_for :condition_updates, @asset.condition_updates.build do |update_event|
          = update_event.input :assessed_rating, label: 'TERM Condition'


        %h2.form-section-header
          Identification & Classification

        = f.input :county


        %h2.form-section-header
          Characteristics

        .form-group.required.radio-buttons-inline
          %label.required.control-label
            %abbr{title: 'required'} *
            = " ADA Accessible"
          %span.radio
            %label
              = radio_button_tag :ada_accessible, 'yes', @asset.ada_accessible
              Yes
          %span.radio
            %label
              = radio_button_tag :ada_accessible, 'no', !@asset.ada_accessible
              No

      .col-sm-6
  
        %h2.form-section-header
          Rebuild/Rehabilitation

        = f.simple_fields_for :rehabilitation_updates, @asset.rehabilitation_updates.build do |update_event|
          = update_event.input :total_cost, :wrapper => :vertical_prepend, label: 'Cost of Rebuild / Rehabilitation' do
            %span.input-group-addon
              %i.fa.fa-usd
            = update_event.input_field :total_cost, :class => 'form-control', :required => true, :value => 0, :label => false
          = update_event.input :extended_useful_life_months, label: 'Extend Useful Life by Months'
          = update_event.input :event_date, :label => 'Date of Rebuild/Rehabilitation', required: false, :wrapper => :vertical_append do
            = update_event.input_field :event_date, :as => :string, :class => 'form-control datepicker', :value => format_as_date(update_event.object.event_date)
            %span.input-group-addon
              %i.fa.fa-calendar

        - view_component = 'app_characteristics_form'
        - if lookup_context.template_exists?(view_component, 'transit_assets/facility', true)
          = render :partial => "transit_assets/facility/#{view_component}", :locals => {:f => f}


  .form-actions.form-section
    = f.button :submit, '+ Add Asset & Go to New Record', :class => 'btn btn-primary'