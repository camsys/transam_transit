- unless @asset.new_record?
  .row.border-between
    .col-sm-6
      = editable_asset_field_tag(@asset, :facility_name, '* Facility Name')

      = editable_asset_association_tag(@asset, :country, '* Country', [['US', 'United States of America']], suffix: '', inputclass: 'full-width')
      = editable_asset_field_tag(@asset, :address1, '* Address 1')
      = editable_asset_field_tag(@asset, :address2, 'Address 2', required: false)
      .row
        .col-sm-6
          = editable_asset_field_tag(@asset, :city, '* City')
        .col-sm-2
          = editable_asset_association_tag(@asset, :state, '* State', ISO3166::Country['US'].states.keys.map{|k| [k, k]}, suffix: '', inputclass: 'full-width')

        .col-sm-4
          .form-group
            %label.control-label
              * Zip Code
            .display-value
              %a.editable-field.required{href:'#', id: 'zip', data: {name: 'asset[zip]', type: 'text', url: "#{asset_path(@asset)}", tpl: "<input type='text' pattern='[0-9]{5}' title='5 digit zip' placeholder='5 digit zip'>", value: "#{@asset.zip}"}}

      .profile-county
      = editable_asset_association_tag(@asset, :county, 'County',District.where(district_type: DistrictType.find_by(name: 'County'),state: SystemConfig.instance.default_state_code).pluck(:name).map{|c| [c,c]}, include_blank: true, suffix: '', inputclass: 'full-width')
      .row
        .col-sm-4
          = editable_asset_field_tag(@asset, :asset_tag, '* Asset ID')
        .col-sm-4
          = editable_asset_field_tag(@asset, :external_id, 'External ID', required: false)
        .col-sm-4
          = editable_asset_field_tag(@asset, :ntd_id, 'NTD ID', required: false)

    .col-sm-6
      = editable_asset_association_tag(@asset, :fta_asset_class, '* Class', FtaAssetClass.where(fta_asset_category_id: @asset.fta_asset_category_id).collect{|x| [x.id, x.name]}, inputclass: 'full-width')
      = editable_asset_association_tag(@asset, :global_fta_type, '* Type', FtaFacilityType.all.collect{|f| ["#{f.to_global_id}", "#{f.to_s}"]}, current_method: :global_fta_type, inputclass: 'full-width')
      = editable_asset_association_tag(@asset, :asset_subtype, '* Subtype', AssetSubtype.where(asset_type: AssetType.where(class_name: ['TransitFacility', 'SupportFacility'])).order(:name).collect{|x| [x.id, x.name]}, inputclass: 'full-width')
      = editable_asset_association_tag(@asset, :esl_category, '* Estimated Service Life (ESL) Category', EslCategory.active.where(class_name: @asset.class.to_s).collect{|x| [x.id, x.name]}, inputclass: 'full-width')
      .col-sm-6
        .form-group.form-inline
          %label.control-label
            Coordinate Format
          .display-value
            %span.radio
              %label
                = radio_button_tag :coordinate_format, 'decimal', true
                Decimal Degrees
            %span.radio
              %label
                = radio_button_tag :coordinate_format, 'dms', false
                DMS
      .col-sm-3
        .form-group
          %label.control-label
            Longitude
          .display-value
            .decimal-coords= @asset.longitude_from_geometry
            .dms-coords{style: 'display:none;'}= @asset.dms_longitude_from_geometry
      .col-sm-3
        .form-group
          %label.control-label
            Latitude
          .display-value
            .decimal-coords= @asset.latitude_from_geometry
            .dms-coords{style: 'display:none;'}= @asset.dms_latitude_from_geometry

:ruby
  county_names = District.joins(:district_type).where(district_types: {name: 'County'}).district_names_by_state

:javascript

  var county_names = #{District.joins(:district_type).where(district_types: {name: 'County'}).district_names_by_state.to_json.html_safe};

  $('.profile-county .editable-field').on('shown', function(e, editable) {
    $('#county_group input').typeahead({
        items: 10,
        source: function(query, process) {
          var state_selected = $('#organization_state').val();

          if (state_selected) {
            counties_selected = county_names[state_selected];
            return process(counties_selected);
          }
        }
    });
  });

  $("input[name='coordinate_format']").on("click", function() {
    if ($(this).val() == 'decimal') {
      $('.decimal-coords').show();
      $('.dms-coords').hide();
    } else {
      $('.decimal-coords').hide();
      $('.dms-coords').show();
    }

  });
