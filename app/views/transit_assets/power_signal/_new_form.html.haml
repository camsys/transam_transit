= simple_form_for(@asset,
  :as => :asset,
  :url => inventory_index_path,
  :method => 'post',
  :html => {:class => 'form-vertical'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|

  = f.input :from_line
  = f.input :from_segment
  = f.input :to_line
  = f.input :to_segment
  = f.input :segment_unit
  = f.association :infrastructure_segment_unit_type, collection: InfrastructureSegmentUnitType.active
  = f.association :infrastructure_chain_type, collection: InfrastructureChainType.active
  = f.input :from_location_name
  = f.input :to_location_name
  = f.input :relative_location
  = f.input :relative_location_unit
  = f.input :relative_location_direction
  = f.input :asset_tag
  = f.input :external_id
  = f.input :description
  = f.input :location_name
  = f.association :fta_asset_class
  = f.input :global_fta_type, :collection => FtaGuidewayType.all.map{|f| [ f.to_s, f.to_global_id ]}
  = f.association :asset_subtype
  = f.association :infrastructure_segment_type, collection: InfrastructureSegmentType.active.where(fta_asset_class: @asset.fta_asset_class) # need to add JS to hide based on subtype selected
  = f.association :infrastructure_division, collection: InfrastructureDivision.active.where(organization_id: @asset.organization_id)
  = f.association :infrastructure_subdivision, collection: InfrastructureSubdivision.active.where(organization_id: @asset.organization_id)

  = f.association :infrastructure_operation_method_type
  = f.association :infrastructure_control_system_type

  = f.input :pcnt_capital_responsibility
  = f.association :shared_capital_responsibility_organization, collection: Organization.all

  = f.input :primary_fta_mode_type_id
  = f.input :primary_fta_service_type_id

  = f.association :land_ownership_organization
  = f.input :other_land_ownership_organization
  = f.association :title_ownership_organization, label: 'Infrastructure Owner'
  = f.input :other_title_ownership_organization, label: 'Infrastructure Owner (Other)'

  = f.simple_fields_for :condition_updates, @asset.condition_updates.build do |update_event|
    = update_event.input :assessed_rating

  = f.simple_fields_for :service_status_updates, @asset.service_status_updates.build do |update_event|
    = update_event.input :service_status_type_id, collection: ServiceStatusType.active
    = update_event.input :fta_emergency_contingency_fleet

  %ul.nav.nav-tabs
    - ComponentType.where(fta_asset_category: @asset.fta_asset_class.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
      %li
        %a{:href => "##{component_type}", :data =>{:toggle => 'tab'}}
          = component_type


  .tab-content
    - ComponentType.where(fta_asset_category: @asset.fta_asset_class.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
      .tab-pane.fade{id: component_type.to_s}
        .tab-content
          - component_element_types = ComponentElementType.where(component_type: component_type)
          - if component_element_types.count > 0
            - component_element_types.each do |component_element_type|
              %fieldset
                %legend =component_element_type
                - nested_id = "component_element_type_#{component_element_type.id}"
                %div{id: nested_id}
                  = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, component_element_type: component_element_type, parent_id: f.object.id) do |component|
                    = render "transit_assets/guideway/component_new_fields", f: component, component_type: component_element_type
                  .links
                    = link_to_add_association '+', f, :dependents, partial: "transit_assets/guideway/component_new_fields",render_options:  {locals: { component_type: component_element_type }}
          - else
            - nested_id = "component_type_#{component_type.id}"
            %div{id: nested_id}
              = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, parent_id: f.object.id) do |component|
                = render "transit_assets/guideway/component_new_fields", f: component, component_type: component_type
              .links
                = link_to_add_association 'add', f, :dependents, partial: "transit_assets/guideway/component_new_fields",render_options:  {locals: { component_type: component_type }}

  = f.button :submit, :class => 'btn btn-primary'