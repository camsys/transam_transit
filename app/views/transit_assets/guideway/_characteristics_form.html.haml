- unless @asset.new_record?
  = simple_form_for(@asset,
    :as => :asset,
    :url => inventory_path(@asset),
    :method => 'put',
    :html => {:class => 'form-vertical'},
    :wrapper => :vertical_form,
    :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
      :radio_buttons => :vertical_radio_and_checkboxes,
      :file => :vertical_file_input,
      :boolean => :vertical_boolean}) do |f|

    %ul.nav.nav-tabs
      - ComponentType.where(fta_asset_category: @asset.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
        %li
          %a{:href => "##{component_type}", :data =>{:toggle => 'tab'}}
            = component_type


    .tab-content
      - ComponentType.where(fta_asset_category: @asset.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
        .tab-pane.fade{id: component_type.to_s}
          .tab-content
            - component_element_types = ComponentElementType.where(component_type: component_type)
            - if component_element_types.count > 0
              - component_element_types.each do |component_element_type|
                %fieldset
                  %legend =component_element_type
                  - nested_id = "guideway_component_element_type_#{component_element_type.id}"
                  %div{id: nested_id}
                    = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, component_element_type: component_element_type, parent_id: f.object.id) do |component|
                    = render "#{component_element_type.parameterize(separator: '_')}_component_fields", f: component
                    .links
                      = link_to_add_association '+', f, :infrastructure_components, partial: "transit_assets/guideway/#{component_element_type.parameterize(separator: '_')}_component_fields",render_options:  {locals: { component_type: component_element_type }}
            - else
              - nested_id = "guideway_component_type_#{component_type.id}"
              %div{id: nested_id}
                = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, parent_id: f.object.id) do |component|
                  = render "#{component_type.parameterize(separator: '_')}_component_fields", f: component
                .links
                  = link_to_add_association 'add', f, nested_id.to_sym, :infrastructure_components, partial: "transit_assets/guideway/#{component_type.parameterize(separator: '_')}_component_fields",render_options:  {locals: { component_type: component_type }}

      = f.button :submit, :class => 'btn btn-primary'