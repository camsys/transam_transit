%ul.nav.nav-tabs
  %li.active
    %a{:href => '#required', :data =>{:toggle => 'tab'}}
      Required Fields
  %li
    %a{:href => '#recommended', :data =>{:toggle => 'tab'}}
      Recommended Fields

= simple_form_for(@asset,
  :as => :asset,
  :url => @asset.new_record? ? inventory_index_path : inventory_path,
  :method => @asset.new_record? ? 'post' : 'put',
  :html => {:class => 'form-vertical'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|

  = hidden_field_tag :asset_seed_class_name, 'FtaAssetClass'

  .tab-content.form-section
    .tab-pane.fade.in.active#required
      .col-sm-6
        
        %h2.form-section-header
          Organization

        = f.association :organization, collection: TransitOperator.where(id: @organization_list)

        - if @asset.new_record?
          %h2.form-section-header
            Service Status

          = f.simple_fields_for :service_status_updates, @asset.service_status_updates.build do |update_event|
            = update_event.input :service_status_type_id, collection: ServiceStatusType.active, label: 'Service Status'


        %h2.form-section-header
          Funding

        .form-row-group.clearfix

          .form-group.required.radio-buttons-inline.col-xs-6.left-col.row-col
            %label.required.control-label
              %abbr{title: 'required'} *
              = " Direct Capital Responsibility"
            %span.radio
              %label
                = radio_button_tag :direct_capital_responsibility, 'yes', @asset.direct_capital_responsibility
                Yes
            %span.radio
              %label
                = radio_button_tag :direct_capital_responsibility, 'no', !@asset.direct_capital_responsibility
                No

          = f.input :pcnt_capital_responsibility, :required => @asset.direct_capital_responsibility, :wrapper => :vertical_append, wrapper_class: "col-xs-6 right-col row-col" , :label => "Percent Capital Responsibility" do
            = f.number_field :pcnt_capital_responsibility, :class => 'form-control', :required => @asset.direct_capital_responsibility, :disabled => !@asset.direct_capital_responsibility, :min => 1, :max => 100
            %span.input-group-addon %

        = f.association :shared_capital_responsibility_organization, collection: [['N/A',Infrastructure::SHARED_CAPITAL_RESPONSIBILITY_NA], ['Other',TransamAsset::DEFAULT_OTHER_ID]] + Organization.all.collect{|m| [m.to_s, m.id]}, label: 'Organization with Shared Capital Responsibility', required: true
        = f.input :other_shared_capital_responsibility, label: 'Organization with Shared Capital Responsibility (Other)', disabled: @asset.new_record?

        %h2.form-section-header
          Operations

        .form-row-group.clearfix

          = f.input :max_permissible_speed, label: 'Maximum Permissible Speed', required: true, input_html: { min: 0 }, wrapper_class: "form-group col-xs-6 left-col row-col"

          = f.input :max_permissible_speed_unit, collection: [['mph', 'mph'], ['kph', 'kph']], label: 'Unit', required: true, wrapper_class: "form-group col-xs-6 right-col row-col"

        .form-row-group.clearfix

          = f.input :primary_fta_mode_type_id, collection: FtaModeType.active, label: 'Primary Mode', required: true, wrapper_class: "form-group col-xs-6 left-col row-col"
          
          = f.input :primary_fta_service_type_id, collection: FtaServiceType.active, label: 'Service Type (Primary Mode)', required: true, wrapper_class: "form-group col-xs-6 right-col row-col"

      .col-sm-6

        %h2.form-section-header
          Identification & Classification

        = f.input :asset_tag, label: 'Asset ID'

        = f.input :description, label: 'Description / Segment Name'

        = f.input :fta_asset_category_id, as: :hidden, input_html: {value: @asset.fta_asset_class.fta_asset_category_id}

        = f.input :infrastructure_segment_unit_type_id, as: :radio_buttons, collection: InfrastructureSegmentUnitType.active, checked: InfrastructureSegmentUnitType.active.first.id, required: true, label: 'Segment Unit', :wrapper_class => 'form-group radio-buttons-inline'

        .form-row-group.clearfix
          .segment-unit-type.segment-unit-type-marker-posts.segment-unit-type-chaining
            .col-md-5.row-col.left-col.clearfix.add-colon

              = f.input :from_line, required: true, label: 'Line', wrapper_class: 'form-group col-xs-4 row-col left-col'

              = f.input :from_segment, required: true, label: 'From', wrapper_class: 'form-group col-xs-8 row-col right-col'

            .col-md-5.row-col.middle-col.clearfix

              = f.input :to_line, label: 'Line', wrapper_class: 'form-group col-xs-4 row-col left-col'

              = f.input :to_segment, label: 'To', wrapper_class: 'form-group col-xs-8 row-col right-col'

          .segment-unit-type.segment-unit-type-marker-posts
            .col-md-2.row-col.right-col.clearfix
              = f.input :segment_unit, required: true, collection: [['mile', 'mile'], ['kilometer', 'kilometer']], label: 'Unit', wrapper_class: 'form-group row-col'

            .col-md-6.row-col.left-col.add-colon
              = f.input :from_location_name, label: 'From (Location Name)'
            .col-md-6.row-col.right-col
              = f.input :to_location_name, label: 'To (Location Name)'

          .segment-unit-type.segment-unit-type-chaining{style: 'display:none;'}
            .col-md-2.row-col.right-col.clearfix
              = f.association :infrastructure_chain_type, label: 'Chain Type', required: true, wrapper_class: 'form-group row-col'
          .segment-unit-type.segment-unit-type-lat-long{style: 'display:none;'}
            = f.input :latitude, required: true, label: 'Latitude', wrapper_class: 'form-group col-xs-6 row-col left-col'
            = f.input :longitude, required: true, label: 'Longitude', wrapper_class: 'form-group col-xs-6 row-col right-col'

          .segment-unit-type.segment-unit-type-chaining{style: 'display:none;'}
            .col-md-5.add-colon

            .col-md-5-offset.col-md-7.row-col.left-col.clearfix
              = f.input :relative_location, label: 'Relative Loc.', wrapper_class: 'form-group col-xs-4 row-col left-col'
              = f.input :relative_location_unit, collection: [Uom::FEET, Uom::INCH].collect{|u| [u.pluralize, u]}, label: 'Unit', wrapper_class: 'form-group col-xs-4 row-col middle-col'
              = f.input :relative_location_direction, label: 'Direction', wrapper_class: 'form-group col-xs-4 row-col right-col'

        .form-row-group.clearfix

          .col-md-3.row-col.left-col

            = f.association :fta_asset_class, collection: FtaAssetClass.where(id: @asset.fta_asset_class_id), label: 'Class'

          .col-md-9.row-col.right-col
          
            = f.input :global_fta_type, :collection => FtaTrackType.all.map{|f| [ f.to_s, f.to_global_id ]}, label: 'Type', required: true, wrapper_class: 'form-group col-xs-6 row-col left-col'
        
            = f.association :asset_subtype, collection: AssetSubtype.where(asset_type: AssetType.where(class_name: 'Track')), label: 'Subtype', wrapper_class: 'form-group col-xs-6 row-col right-col'

        .form-row-group.clearfix

          = f.association :infrastructure_segment_type, collection: InfrastructureSegmentType.active.where(fta_asset_class: @asset.fta_asset_class), label: 'Segment Type', wrapper_class: 'form-group col-xs-6 row-col left-col' # need to add JS to hide based on subtype selected

          = f.association :infrastructure_division, collection: InfrastructureDivision.active.where(organization_id: @asset.organization_id), label: 'Main Line/Division', wrapper_class: 'form-group col-xs-6 row-col right-col'

        .form-row-group.clearfix

          = f.association :infrastructure_subdivision, collection: InfrastructureSubdivision.active.where(organization_id: @asset.organization_id), label: 'Branch/Subdivision', wrapper_class: 'form-group col-xs-6 row-col left-col'

          = f.association :infrastructure_track, collection: InfrastructureTrack.active.where(organization_id: @asset.organization_id), label: 'Track', required: 'true', wrapper_class: 'form-group col-xs-6 row-col right-col'

    .tab-pane.fade.in.no-divide#recommended
      - if @asset.new_record?
        %h2.form-section-header
          Condition

        = f.simple_fields_for :condition_updates, @asset.condition_updates.build do |update_event|
          = update_event.input :assessed_rating, required: false, input_html: {value: nil}, label: 'TERM Condition'

      %h2.form-section-header
        Characteristics

      %h3.form-section-subheader
        Components

      %ul.nav.nav-tabs
        - ComponentType.where(fta_asset_category: @asset.fta_asset_class.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
          %li
            %a{:href => "##{"component-" + component_type.id.to_s}", :data =>{:toggle => 'tab'}}
              = component_type


      .tab-content.sub-tabs
        - ComponentType.where(fta_asset_category: @asset.fta_asset_class.fta_asset_category, fta_asset_class: @asset.fta_asset_class).each do |component_type|
          .tab-pane.fade{id: "component-" + component_type.id.to_s}
            .tab-content
              - new_component_subtypes = NewComponentSubtype.where(component_type: component_type)
              - if new_component_subtypes.count > 0
                - new_component_subtypes.each do |new_component_subtype|
                  .nested-fields-elements
                    - nested_id = "new_component_subtype_#{new_component_subtype.id}"
                    %div{id: nested_id, class: 'component_nested_form'}
                      %h4.component-type-header
                        = new_component_subtype
                      = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, new_component_subtype: new_component_subtype, parent_id: f.object.id) do |component|
                        = render "transit_assets/track/component_new_fields", f: component, component_type: new_component_subtype
                      .links
                        = link_to_add_association "+ Add #{new_component_subtype}", f, :infrastructure_components, partial: "transit_assets/track/component_new_fields",render_options:  {locals: { component_type: new_component_subtype }}
              - else
                - nested_id = "component_type_#{component_type.id}"
                %div{id: nested_id, class: 'component_nested_form'}
                  %h4.component-type-header
                    = component_type
                  = f.simple_fields_for :infrastructure_components, InfrastructureComponent.where(component_type: component_type, parent_id: f.object.id) do |component|
                    = render "transit_assets/track/component_new_fields", f: component, component_type: component_type
                  .links
                    = link_to_add_association '+Add', f, :infrastructure_components, partial: "transit_assets/track/component_new_fields",render_options:  {locals: { component_type: component_type }}


  .form-actions.form-section
    = f.button :submit, '+ Add Asset & Go to New Record', :class => 'btn btn-primary'

:javascript

  $('.component_nested_form').on('cocoon:after-insert', function(e, insertedItem) {
    $('.asset_infrastructure_components_asset_subtype_id input').val($('#asset_asset_subtype_id').val());
    $('.asset_infrastructure_components_global_fta_type input').val($('#asset_global_fta_type').val());

  });

  $('#asset_asset_subtype_id').on('change', function(event) {
    $('.asset_infrastructure_components_asset_subtype_id input').val($('#asset_asset_subtype_id').val());
  });
  $('#asset_global_fta_type').on('change', function(event) {
    $('.asset_infrastructure_components_global_fta_type input').val($('#asset_global_fta_type').val());
  });

  