.modal-dialog.modal-lg
  .modal-content
    .modal-header
      %button.close{:data => {:dismiss => "modal"}}
        x
      %h3.modal-title
        TAM Group
    .modal-body
      %fieldset
        %legend
          = @tam_group.new_record? ? 'Add Group' : 'Edit Group'
        = simple_form_for([@rule_set_type, @tam_policy, @tam_group],
          :html => {:class => 'form-vertical group-form'},
          :wrapper => :vertical_form,
          :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes, :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|

          .row
            .col-sm-6
              = f.input :name, :input_html => {:maxlength => 50}
            .col-sm-6
              = f.input :leader_id, :label => "TAM Group Lead", :collection => TransitAgency.where(id: @organization_list), :group_label_method => 'coded_name', :as => :grouped_select, :group_method => :group_lead_candidates

          .form-group.required
            %label.required.control-label
              %abbr{title: 'required'} *
              Organizations
            = f.select(:organization_ids,
                    @tam_group.allowed_organizations.where(id: @organization_list).map{|o| [o.coded_name, o.id]},
                    {:include_blank => true},
                    {multiple: true, required: true})


          = f.association :fta_asset_categories, :as => :check_boxes, :collection => FtaAssetCategory.active, :label => 'Asset Categories'

          = f.submit 'Save', :class => 'btn btn-primary' #, :data => {:confirm => "Creating a new TAM policy year cannot be undone and Groups can no longer be added to the TAM policy from the prior year. Do you wish to proceed?"}
          %button.btn.btn-default{:data => {:dismiss => "modal"}} Cancel



:javascript

  $(document).ready(function(){
    $(function() {
      $("#tam_group_organization_ids").selectize({
          plugins: ['remove_button'],
          delimiter: ',',
          persist: false,
          create: function(input) {
            return {
                value: input,
                text: input
            }
          }
      });
    });
  });
  
  var asset_types = JSON.parse('#{@asset_categories.to_json.html_safe}');

  $.validator.addMethod("atLeastOneOption", function(value, element, args) {
    return element.children.length > 0;
  }, "Must have at least one option in select.");
  
  $('.group-form').validate({
    rules: {
      selected_operators: { atLeastOneOption: true }
    },
    messages: {
      selected_operators: { atLeastOneOption: "Please select at least one organization." }
    }
  });

  $( '#tam_group_organization_ids').change(function() {

    // hide all FTA asset categories
    $('span.checkbox').hide();

    // select all the options in the selected array from the other shuttle list list
    var org_ids = $('#tam_group_organization_ids').val();

    // Set asset types of org only
    for (var j = 0; j < org_ids.length; j++){
      org_types = asset_types[parseInt(org_ids[j])]
      for (var k = 0; k < org_types.length; k++){
        category_id = org_types[k];
        $('#tam_group_fta_asset_category_ids_'+category_id).parent().parent().show();
      }
    }

  });