= simple_form_for(@rule,
  :url => add_policy_rule_policy_path(@policy),
  :remote => true,
  :html => {:class => 'form-vertical', :autocomplete => 'off', :id => 'edit-form'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
  :radio_buttons => :vertical_radio_and_checkboxes,
  :file => :vertical_file_input,
  :boolean => :vertical_boolean}) do |f|

  %fieldset
    %legend Replacement
    .row
      .col-xs-12
        = f.association :asset_subtype, :collection => AssetSubtype.active.select{ |subtype| !PolicyAssetSubtypeRule.exists?(policy: @policy, asset_subtype: subtype) }.map { |subtype| [subtype.name, subtype.id, { :class => subtype.asset_type.class_name }] }, :include_blank => false
      .col-sm-3
        = f.input :min_service_life_months, :wrapper => :vertical_append, :label => "ESL (Mo)" do
          = f.input_field :min_service_life_months, :class => "form-control", :required => true, min: @rule.minimum_value(:min_service_life_months, 1)
          %span.input-group-addon
            %i.fa Mo

      .col-sm-3
        = f.input :replacement_cost, :wrapper=> :vertical_prepend  do
          %span.input-group-addon
            %i.fa.fa-usd
          = f.input_field :replacement_cost, :class => "form-control", :required => true, :min => 0

      .col-sm-3
        = f.input :cost_fy_year, :required => true, :collection => get_fiscal_years, :include_blank => false

      .col-sm-3
        = f.input :replace_with_new

        = f.input :replace_with_leased


      .col-sm-3.mileage
        = f.input :fuel_type_id, :required => true, :collection => FuelType.active.collect{|x| [x.code, x.id]}
      .col-sm-3.mileage
        = f.input :min_service_life_miles, :required => true, :label => "ESL (Mi)", :input_html => { min: @rule.minimum_value(:min_service_life_miles) }
      .col-sm-3.used
        = f.input :min_used_purchase_service_life_months, :required => true, :label => "ESL (Mo)", :input_html =>{ min:  @rule.minimum_value(:min_used_purchase_service_life_months, 48) }
      .col-sm-3.leased
        = f.input :lease_length_months, :input_html => { min: @rule.minimum_value(:lease_length_months) }

      .col-sm-3.both-vehicle-and-station
        = f.input :purchase_replacement_code, :required => true

      .col-sm-3.vehicles
        = f.input :purchase_expansion_code, :required => true
      .col-sm-3.vehicles
        = f.input :lease_replacement_code, :required => true
      .col-sm-3.both-vehicle-and-station
        = f.input :lease_expansion_code, required: true, :input_html => {:minlength => 8 , maxlength: 8}
      .col-sm-3.both-vehicle-and-station
        = f.input :engineering_design_code, required: true, :input_html => {:minlength => 8 , maxlength: 8}
      .col-sm-3.station
        = f.input :construction_code, required: true, :input_html => {:minlength => 8 , maxlength: 8}

  %fieldset
    %legend Rehabilitation

    .row
      .col-sm-3
        = f.input :rehabilitation_service_month, required: true, :label => "Rehab Month", :input_html => { min: @rule.minimum_value(:rehabilitation_service_month) }
      .col-sm-3
        = f.input :rehabilitation_cost, :wrapper=> :vertical_prepend  do
          %span.input-group-addon
            %i.fa.fa-usd
          = f.input_field :rehabilitation_cost, required: true, :class => "form-control", :min => @rule.minimum_value(:rehabilitation_cost)
      .col-sm-3
        = f.input :extended_service_life_months, required: true, :label => "Change in ESL (Mi)", :input_html => { :min => @rule.minimum_value(:extended_service_life_months) }
      .col-sm-3.mileage
        = f.input :extended_service_life_miles, required: true, :label => "Change in ESL (Mi)", :input_html => { :min => @rule.minimum_value(:extended_service_life_miles) }
    .row
      .col-sm-3.ali-code.both-vehicle-and-station
        = f.input :rehabilitation_code, required: true

  .row
    = f.button :submit, "Create", :class => 'btn btn-primary'
    %button.btn.btn-default{:data => {:dismiss => "modal"}} Cancel

:javascript

  $(document).ready(function() {
    // Setup form state
    var checked = $('#policy_asset_subtype_rule_replace_with_new').is(':checked');
    replace_with_new_action(checked);
    var checked = $('#policy_asset_subtype_rule_replace_with_leased').is(':checked');
    replace_with_leased_action(checked);
    show_appropriate_fields();

  });

  // validate the form before submittal
  $('#edit-form').validate({
    submitHandler: function(form) {
      $('#rule-modal').modal('hide');
      // Show the spinner while the form request is being handled
      $("#spinner").show();
      $(form).ajaxSubmit();
    }
  });

  function replace_with_new_action(checked) {
    if (checked) {
      $('.used').hide().find(':input').val('').attr('disabled', true).removeClass('required');
    } else {
      $('.used').fadeIn().find(':input').val('').attr('disabled', false).addClass('required');
    }
  };

  function replace_with_leased_action(checked) {
    if (checked) {
      $("label[for = policy_asset_subtype_rule_replacement_cost]").html('<abbr title="required">*</abbr> Lease Cost ');
      $("label[for = policy_asset_subtype_rule_lease_length_months]").html('<abbr title="required">*</abbr> Lease Length Months ');
      $('.leased').fadeIn().find(':input').val('').attr('disabled', false).addClass("required");
    } else {
      $("label[for = policy_asset_subtype_rule_replacement_cost]").html('<abbr title="required">*</abbr> Replacement Cost ');
      $('.leased').hide().find(':input').val('').attr('disabled', true).removeClass('required');
    }
  };

  $('#policy_asset_subtype_rule_replace_with_new').on('click', function() {
    var checked = $(this).is(':checked');
    replace_with_new_action(checked);
  });

  $('#policy_asset_subtype_rule_replace_with_leased').on('click', function() {
    var checked = $(this).is(':checked');
    replace_with_leased_action(checked);
  });

  function show_appropriate_fields(selected) {
    var selected = $('#policy_asset_subtype_rule_asset_subtype_id option:selected').attr('class');

    var mileage = (selected === "Vehicle" || selected === "SupportVehicle");
    var rail = (selected === "RailCar" || selected === "Locomotive");
    var vehicle = (mileage || rail);
    var station = (!vehicle);

    if (mileage){
      $('.mileage').fadeIn().find(':input').val('').attr('disabled', false).addClass('required');
    } else {
      $('.mileage').hide().find(':input').val('').attr('disabled', true).removeClass('required');
    };

    if(vehicle){
      $('.vehicles').fadeIn().find(':input').val('').attr('disabled', false).addClass('required');
    } else {
      $('.vehicles').hide().find(':input').val('').attr('disabled', true).removeClass('required');
    };

    if(station){
      $('.station').fadeIn().find(':input').val('').attr('disabled', false).addClass('required');
    } else {
      $('.station').hide().find(':input').val('').attr('disabled', true).removeClass('required');
    }

    var checked = $('#policy_asset_subtype_rule_replace_with_leased').is(':checked');
    replace_with_leased_action(checked);
  };

  $('#policy_asset_subtype_rule_asset_subtype_id').on('change', function() {
    show_appropriate_fields();
  });


