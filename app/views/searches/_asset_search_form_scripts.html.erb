<script type="text/javascript">

  function setInitialState(){
    $('#spinner').hide();
    $('.general-fields').hide();
    $('.all-asset-only').hide();
    $('.equipment-related-only').hide();
    $('.vehicle-related-only').hide();
    $('.facility-related-only').hide();
    $('#search-panel-controller').hide();
  };

  function reset(){
    $(':input').removeAttr("disabled")
    $( '#search-fields option').prop('selected', false);
    $('#search-fields input').val('');
    setInitialState();
  };

  $(document).ready(function() {

    transam.enable_date_pickers();
    transam.make_same_height('.form_part');

      // Page Load Events

      //changes the plus minus icon for the collapse panel buttons
      setInitialState();
      $(".panel-toggle").click(function(){
        $(this).children().toggleClass("fa-minus fa-plus");
      });

        // Add the class "All" to the first option in the Asset Selector
        // to ensure that the javascript can detect when a user has selected the the "Any . . ." option.
      $("#type-selector option:first").attr('class', 'All');

      // Search Form AJAX event handling // See https://github.com/rails/jquery-ujs/wiki/ajax
      $("form").on("ajax:send", function(xhr) {
        $('#results_table').hide();
        $('#spinner').show();
      })
      .on("ajax:success", function(xhr) {
        $(".search-panel").collapse('hide');
        $("#search-panel-controller").fadeIn();
      })
      .on("ajax:complete", function(xhr, status) {
        $('#spinner').hide();
      });


      //Allows disabled form fields to submit as blank values, which is necessary to prevent the asset searcher from interpreting them as nil.
      $("form").submit(function(){
          $("input:disabled").removeAttr("disabled").prop('selected', false).val('');
        });

      $('.reset-button').on('click', function(event){
        reset();
      });

      //This code controllers the organization filter
      $('#org-selector').on('click', function(event) {
        var selectedOrgs = $('#org-selector option:selected');
        orgIds = $.map(selectedOrgs, function(option){
          return $(option).val();
        });
        filteredOrgs = orgIds.filter(function(id){
          return id.length > 1;
        });
        console.log(filteredOrgs);

        function specifyByOrg(jquerySelector){
          $(jquerySelector + " option").each(function(index, option){
            var orgId = $(option).attr('class');
            if ($.inArray(orgId, filteredOrgs) === -1){
              $(option).prop('selected', false);
              $(option).hide();
              $(option).attr("disabled", "disabled")
            } else {
              $(option).fadeIn();
              $(option).removeAttr("disabled")
            }

          });
        };

        if (filteredOrgs.length > 0){
          specifyByOrg('#vendor-selector');
        };
      });

      // Type Selector Handler, Populates the Asset Search form and disables fields depending on what the user clicks chooses.

      $('#type-selector').on('click', function(event) {
        var selectedOptions = $('#type-selector option:selected');
        classNames = $.map(selectedOptions, function(option){
          return $(option).attr('class');
        });

        function hideOrShow(jquerySelector, booleanVariable){
            if (booleanVariable){
            $(jquerySelector).fadeIn();
          }
          else{
            $(jquerySelector).hide();
            $(jquerySelector + ' option').prop('selected', false);
            $(jquerySelector + ' input').val('');
          };
        };

        // These variables detect the class names of the types the user selected
        var selectedAny = ($.inArray("All", classNames) !== -1);
        var selectedEquipment = ($.inArray("Equipment", classNames) !== -1);

        var selectedVehicles = ($.inArray("Vehicle", classNames) !== -1);
        var selectedSupportVehicles = ($.inArray("SupportVehicle", classNames) !== -1);

        var selectedRailCars = ($.inArray("RailCar", classNames) !== -1)
        var selectedLocomotives = ($.inArray("Locomotive", classNames) !== -1);

        var selectedTransitFacility = ($.inArray("TransitFacility", classNames) !== -1);
        var selectedSupportFacility = ($.inArray("SupportFacility", classNames) !== -1);

        var facilityFields = (selectedTransitFacility || selectedSupportFacility)
        var vehicleFields = (selectedVehicles || selectedSupportVehicles || selectedRailCars || selectedLocomotives);

        var onlyEquipment = (selectedEquipment && !vehicleFields && !facilityFields && !selectedAny);
        var onlyVehicles = (vehicleFields && !selectedEquipment && !facilityFields && !selectedAny);
        var onlyFacilities = (facilityFields && !vehicleFields && !selectedEquipment && !selectedAny);

        var noTypeSpecified = (!selectedEquipment && !vehicleFields && !facilityFields);

        //Shows only the Subtypes Relevant to the Search
        hideOrShow('.equipment-selector', selectedEquipment);
        hideOrShow('.revenue-vehicle-selector', selectedVehicles);
        hideOrShow('.support-vehicle-selector', selectedSupportVehicles);
        hideOrShow('.railcar-selector', selectedRailCars);
        hideOrShow('.locomotive-selector', selectedLocomotives);
        hideOrShow('.transit-selector', selectedTransitFacility);
        hideOrShow('.support-facility-selector', selectedSupportFacility);


        // Shows or hides the fields depending on the selections
        if (classNames.length > 0){
          $('.general-fields').fadeIn();
        } else{
          $('.general-fields').hide();
        }

        hideOrShow('.equipment-related-only', onlyEquipment);
        hideOrShow('.vehicle-related-only', onlyVehicles);
        hideOrShow('.facility-related-only', onlyFacilities);
        hideOrShow('.all-asset-only', noTypeSpecified);

        var specificSelections = $.map(selectedOptions, function(option){
          return $(option).text();
        });

        //These variables determine which specific name of the types selected

        var selectedFacilityEquipment = ($.inArray("Facility Equipment", specificSelections) !== -1);
        var selectedItEquipment = ($.inArray("IT Equipment", specificSelections) !== -1);
        var selectedOfficeEquipment = ($.inArray("Office Equipment", specificSelections) !== -1);
        var selectedCommunicationsEquipment = ($.inArray("Communications Equipment", specificSelections) !== -1);
        var selectedSignalsSignsEquipment = ($.inArray("Signals/Signs", specificSelections) !== -1);
        var selectedMaintenceEquipment = ($.inArray("Maintenance Equipment", specificSelections) !== -1);

        hideOrShow('.facility-equipment-selector', selectedFacilityEquipment);
        hideOrShow('.it-equipment-selector', selectedItEquipment);
        hideOrShow('.office-equipment-selector', selectedOfficeEquipment);
        hideOrShow('.communications-equipment-selector', selectedCommunicationsEquipment);
        hideOrShow('.signals-signs-equipment-selector', selectedSignalsSignsEquipment);
        hideOrShow('.maintenance-equipment-selector', selectedMaintenceEquipment);

        function filterManufacturers(){
          $('#manufacturers').find('option').each(
            function(index, option){
              class_name = $(option).attr('class');
              if ($.inArray(class_name, classNames) !== -1){
                //console.log(class_name + ' is filtered in.')
                $(option).fadeIn();
                $(option).removeAttr("disabled")
              } else {
                $(option).prop('selected', false);
                $(option).hide();
                $(option).attr("disabled", "disabled")
              }
            });
        };

        function showAllManufacturers(){
            $('#manufacturers').find('option').each(
              function(index, option){
                $(option).fadeIn();
                $(option).removeAttr("disabled");
            });
        };

        if (!selectedAny) {
          filterManufacturers();
        } else {
          showAllManufacturers();
        }

        // Reset all disabled form fields so that it can correctly
        // determine which fields to disable
        $(':input').removeAttr("disabled");

        // Disables form fields not relevant to the selected asset type(s)
        function disableField(jquerySelector, booleanVariable){
          if (booleanVariable){
            $(jquerySelector + ' :input').attr("disabled", "disabled");
          } else{
            $(jquerySelector + '-hide').fadeIn();
          };
        };

        function hideCheckbox(jquerySelector, booleanVariable){
          if (booleanVariable){
            $(jquerySelector + '-hide').hide();
          };
        }

        disableField('.not-for-railcars', selectedRailCars);
        disableField('.not-for-locomotives', selectedLocomotives);
        disableField('.not-for-transit', selectedTransitFacility);
        disableField('.not-for-support-facility', selectedSupportFacility);
        disableField('.not-for-support-vehicles', selectedSupportVehicles);

        hideCheckbox('.not-for-railcars', selectedRailCars);
        hideCheckbox('.not-for-locomotives', selectedLocomotives);
        hideCheckbox('.not-for-transit', selectedTransitFacility);
        hideCheckbox('.not-for-support-facility', selectedSupportFacility);
        hideCheckbox('.not-for-support-vehicles', selectedSupportVehicles);


        //Hides or disables option groups in the subtype selector not revelant to the type selected
        function specifyOptionGroups(){  $('#subtype-selector').find('optgroup').each(function(index, group){
            var label = $(group).attr('label')
            if ($.inArray(label, specificSelections) === -1){
              $(group).children('option').prop('selected', false);
              $(group).hide();
              $(group).attr("disabled", "disabled")
            } else {
              $(group).fadeIn();
              $(group).removeAttr("disabled")
            }
          }); // each of each
        }; // end of specifyOptionGroups

        function showAllGroups(){
          $('#subtype-selector').find('optgroup').each(function(index, group){
            $(group).fadeIn();
            $(group).removeAttr("disabled");
          });
        };

        if (selectedAny){
          showAllGroups();
        } else {
          specifyOptionGroups();
        }

      }); // end of type selector scripts



      // if there are cached search params toggile which sections to show/hide
      $('#type-selector').click();
  }); // end of document ready scripts

</script>
