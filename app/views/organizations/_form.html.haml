:css
  .scrollable-checkbox-div {
    overflow-y:scroll;
    max-height: 250px;
  }

  .checkbox.inline {
    display: inline;
  }


.row
  = simple_form_for(@org,
  :as => :organization,
  :url => @org.new_record? ? organizations_path : organization_path,
  :method => @org.new_record? ? 'post' : 'put',
  :html => {:class => 'form-vertical org_form'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|
    .col-md-4
      .panel.panel-default.header-part
        .panel-body
          = dialog_tag('Corporate', {:icon => 'fa fa-book'}) do
            - if @org.new_record?
              = f.input :organization_type_id, :as => :hidden
              = f.input :customer_id, :as => :hidden, :input_html => {:value => Customer.first.id}
              = f.input :grantor_id, :as => :hidden, :input_html => {:value => Grantor.first.id}
            - field_custom = SystemConfigFieldCustomization.find_by(is_locked: true, table_name: 'organizations', field_name: 'name', active: true)
            = f.input :name, :label => "Common Name (dba)", :disabled => (field_custom.present? && eval(field_custom.code_frag))
            - field_custom = SystemConfigFieldCustomization.find_by(is_locked: true, table_name: 'organizations', field_name: 'legal_name', active: true)
            = f.input :legal_name, :required => true, :label => "Legal Name", :disabled => (field_custom.present? && eval(field_custom.code_frag))
            - field_custom = SystemConfigFieldCustomization.find_by(is_locked: true, table_name: 'organizations', field_name: 'short_name', active: true)
            = f.input :short_name, :label => "Acronym or Short Name", :disabled => (field_custom.present? && eval(field_custom.code_frag))
            = f.input :external_id, :label => 'External ID'
            = f.association :governing_body_type
            = f.input :governing_body
            = f.input :indian_tribe, :label => "Indian Tribe", :as => :select, :include_blank => false
            = f.input :subrecipient_number, :label => "FEIN"
            = f.input :ntd_id_number, :label => "NTD ID Number"
            = f.association :fta_agency_type, :label => "Organization Structure"
            = f.association :ntd_organization_type, :label => 'NTD Organization Type'
            = f.input :ntd_reporting_start_month, collection: [['July - June', 7], ['October - September', 10], ['January - December', 1]], label: 'NTD Reporting Period'
            = f.input :executive_director_id, required: false, label: "Executive Director", collection: @org.users, hint: "Executive Director is the main contact for oversight activity requests."
            = f.input :agency_office_address, required: false, label: "Agency Office Location", hint: "Location of oversight review."


          - if @org.type_of? PlanningPartner
            = dialog_tag('Associated Organizations', {:icon => 'fa fa-book'}) do

              .form-group
                %label.control-label
                  Transit Operators
                = f.select(:transit_operator_ids,
                        TransitOperator.where(id: @organization_list).map{|o| [o.coded_name, o.id]},
                        {:include_blank => true},
                        {multiple: true})

    .col-md-4
      .panel.panel-default.header-part
        .panel-body
          = dialog_tag('Contact', {:icon => 'fa fa-book'}) do
            = f.input :phone, :as => :tel, :hint => 'Format 123-456-7890'
            = f.input :fax, :as => :tel, :hint => 'Format 123-456-7890'
            = f.input :url, :as => :url, :placeholder => 'http://'
            = f.input :country, :label => "Country", collection: [[ 'United States of America', 'US']]
            = f.input :address1, :label => "Address 1"
            = f.input :address2, :label => "Address 2"
            .row
              .col-sm-6
                = f.input :city
              .col-sm-3
                = f.input :state, :as => :select, :collection => ISO3166::Country['US'].states.keys
              .col-sm-3
                = f.input :zip
            = f.input :county do
              = f.select :county, District.where(district_type: DistrictType.find_by(name: 'County')).pluck(:name,:state).map{|d|[d[0],d[0],{'data-state':d[1], style: d[1]==SystemConfig.instance.default_state_code ? 'display:block;padding-bottom:2px;' : 'display:none;'}]}, {include_blank: true}, {class: 'form-control'}

            - if User.new.respond_to? :email_in_org_domain_list
              = f.input :allowed_email_domains, :required => true, :label => 'Allowed Email Domains', :placeholder => 'To enter more than one domain, separate with |'

          = dialog_tag('Services', {:icon => 'fa fa-book'}) do
            .form-group
              %label.control-label
                Services Provided
              = f.select(:fta_mode_type_ids,
                        FtaModeType.active.map{|o| [o.to_s, o.id]},
                        {:include_blank => true},
                        {multiple: true})

            .form-group
              %label.control-label
                Services Provider Types
              = f.select(:service_provider_type_ids,
                        ServiceProviderType.active.map{|o| [o.to_s, o.id]},
                        {:include_blank => true},
                        {multiple: true})

          -# TODO: Refactor for new table
          - if Rails.application.config.try(:enable_rta_integration)
            = dialog_tag('RTA Integration', {:icon => 'fa fa-book'}) do
              .rta-credential-fields
                = f.fields_for :rta_org_credentials, RtaOrgCredential.where(organization_id: @org.id) do |c|
                  = render "rta_org_credential_fields", f: c
              = link_to_add_association "+ Add credential set", f, :rta_org_credentials, data: { association_insertion_node: '.rta-credential-fields', association_insertion_method: :append }


    .col-md-4
      .panel.panel-default.header-part
        .panel-body
          = dialog_tag('Service Area', {:icon => 'fa fa-book'}) do
            .col-sm-6= f.association :fta_service_area_type, :label => "Service Area"
            .col-sm-6= f.input :service_area_population
            .col-sm-6= f.input :service_area_size
            .col-sm-6= f.input :service_area_size_unit, :collection =>  Uom.units.select{|x| ['square mile', 'acre'].include? x}

            - if @org.respond_to? :district_districts
              = f.association :district_districts, :collection => District.district_districts.active, :as => :check_boxes, :label => 'DOT Districts'


            .form-group
              %label.control-label
                UZA & Non-UZA
              = f.select(:uza_district_ids,
                        (District.uza_districts.active.where(name: ['Rural','Statewide']).map{|o| ["#{o.name} (Non-UZA)", o.id]}+District.uza_districts.active.where.not(name: ['Rural','Statewide']).map{|o| [o.to_s, o.id]}),
                        {:include_blank => true},
                        {multiple: true})

            .form-group
              %label.control-label
                Counties
              = f.select(:county_district_ids,
                        District.county_districts.map{|o| [o.to_s, o.id]},
                        {:include_blank => true},
                        {multiple: true})

            .form-group
              %label.control-label
                Cities
              = f.select(:city_district_ids,
                        District.city_districts.map{|o| [o.to_s, o.id]},
                        {:include_blank => true},
                        {multiple: true})

          - if @org.respond_to? :federal_districts and @org.respond_to? :senate_districts and @org.respond_to? :house_districts
            = dialog_tag('Legislative Districts', {:icon => 'fa fa-book'}) do

              .col-sm-4
                = f.input :federal_district_ids, :wrapper=> :vertical_prepend, :label => "Congressional" do
                  .scrollable-checkbox-div
                    = f.input_field :federal_district_ids, :collection => District.federal_districts.active, :as => :check_boxes

              .col-sm-4
                = f.input :senate_district_ids, :wrapper=> :vertical_prepend, :label => 'State Legislative (Upper)' do
                  .scrollable-checkbox-div
                    = f.input_field :senate_district_ids, :collection => District.senate_districts.active, :as => :check_boxes

              .col-sm-4
                = f.input :house_district_ids, :wrapper=> :vertical_prepend, :label => 'State Legislative (Lower)' do
                  .scrollable-checkbox-div
                    = f.input_field :house_district_ids, :collection => District.house_districts.active, :as => :check_boxes


    .col-md-12
      = f.button :submit, :class => 'btn btn-primary'


= render partial: 'form_scripts'